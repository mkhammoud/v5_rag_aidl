{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "{Graded Assessment: Project - Phase 1 (30\\%) [300 mins] }\n%\\subsection*{Project Description}\n% Beirut Clinic is in need of your help. A lot of patients are visiting to check their diabetes status, i.e. whether they are positive or negative. Due to system errors, all the current healthcare professionals took vacation leave for the same month. Therefore, no healthcare professional is available to discuss the patients' status. As an AI specialist with a limited medical background, you opt to save the clinic. You thought of leveraging Python and Machine Learning to create a system that can detect whether the patient is diabetic or not. To do so, without much knowledge of the medical field, you asked for the dataset available in the clinic. Apparently, the clinic keeps a record of every patient with the following data: \n% \\begin{enumerate}\n%     \\item gender\n%     \\item age\n%     \\item hypertension\n%     \\item heart disease\n%     \\item smoking history\n%     \\item BMI\n%     \\item HbA1c level\n%     \\item blood glucose level\n%     \\item diabetes status\n% \\end{enumerate}\n% However, at that time, you told the clinic that you only took Week #6 of Programming for Applied AI. Therefore, you decided to split the project into two. In the first part of the project, you will address exploring the dataset and extracting statistical information from it. In the second part, you will complete the Diabetes Prediction application and be able to support the patients by telling them whether they are diabetic or not.\n\n% The dataset can be found here: +++ (Files/data\\_week6.csv)\n\n% ## Hint: Study and practice this week's content before solving the project. The questions that you will see in this project are all addressed this week (and in the previous weeks).\n\n% ## Disclaimer: The project described above is specifically designed for the completion of this course. We do not hold any responsibility in case this solution was actually provided by you to clinics since AI can be wrong, and the medical field is a very sensitive domain.\n% \\subsection*{Phase 1}\n% After downloading the dataset, we designed a template notebook file (download from here) to assist you in structuring the answers that you will provide. \n% The questions that you will address are the following:\n% \\begin{enumerate}\n%     \\item Read the dataset using Pandas and store it in a variable. Afterward, print the columns of the dataset.\n%     \\item Print the first 5 rows of the data in a nice table, showing the names of the columns.\n%     \\item Describe the dataset and column data type.\n%     \\item Show the distribution of genders in the dataset.\n%     \\item Show the distribution of smoking history in the dataset.\n%     \\item Calculate the correlation between all of the following: diabetes, age, BMI, and blood glucose level. Show which two are the highest correlated.\n%     \\item In order to analyze the dataset show the following numbers: 1- people over the age 50, 2- male samples with diabetes, 3- female samples who never smoked before and have diabetes.\n%     \\item Find the Oldest Person with Heart Disease.\n%     \\item Calculate the Percentage of Individuals with Hypertension.\n%     \\item Group and Analyze the mean age by Diabetes and gender.\n%     \\item Create a function called search\\_probability that receives the following parameters [smoking\\_history & gender]. The function determines the probability - according to the dataset - of the person being diabetic or not \n%     \\item We have information about individuals' ages, diabetes status, and hypertension status. We want to analyze and categorize individuals into age groups based on the following criteria: 1) Young: Age less than 30 years. 2) Middle-aged: Age between 30 and 60 years inclusive. 3) Senior: Age greater than 60 years. Write a Python program that categorizes individuals into age groups and counts them based on their diabetes and hypertension status. You can use simple code (for and if...) or pandas to resolve the problem.\n% \\end{enumerate}", "metadata": {"source": "./full-course/aai.txt"}}}